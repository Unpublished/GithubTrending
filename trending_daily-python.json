[
{"description": "All Algorithms implemented in Python", "language": "Python", "repo": "Python", "new_stars": 144, "stars": 44268, "owner": "TheAlgorithms", "forks": 12671},
{"description": "An example of using Redis Streams, RedisGears, RedisAI and RedisTimeSeries for Realtime Video Analytics (i.e. counting people)", "language": "Python", "repo": "EdgeRealtimeVideoAnalytics", "new_stars": 143, "stars": 147, "owner": "RedisGears", "forks": 9},
{"description": "PyTorch image models, scripts, pretrained weights -- (SE)ResNet/ResNeXT, DPN, EfficientNet, MobileNet-V3/V2/V1, MNASNet, Single-Path NAS, FBNet, and more", "language": "Python", "repo": "pytorch-image-models", "new_stars": 112, "stars": 441, "owner": "rwightman", "forks": 25},
{"description": "Implementation on EfficientNet model. Keras.", "language": "Python", "repo": "efficientnet", "new_stars": 97, "stars": 133, "owner": "qubvel", "forks": 5},
{"description": "Proof of concept for CVE-2019-0708", "language": "Python", "repo": "BlueKeep", "new_stars": 77, "stars": 489, "owner": "Ekultek", "forks": 166},
{"description": "Asynchronous Advantage Actor-Critic (A3C) algorithm for Super Mario Bros", "language": "Python", "repo": "Super-mario-bros-A3C-pytorch", "new_stars": 73, "stars": 77, "owner": "vietnguyen91", "forks": 20},
{"description": "Sunfish: a Python Chess Engine in 111 lines of code", "language": "Python", "repo": "sunfish", "new_stars": 72, "stars": 1344, "owner": "thomasahle", "forks": 272},
{"description": "A fast and simple framework for building and running distributed applications.", "language": "Python", "repo": "ray", "new_stars": 65, "stars": 7414, "owner": "ray-project", "forks": 1027},
{"description": "\u8c37\u7c92-Chrome\u63d2\u4ef6\u82f1\u96c4\u699c, \u4e3a\u4f18\u79c0\u7684Chrome\u63d2\u4ef6\u5199\u4e00\u672c\u4e2d\u6587\u8bf4\u660e\u4e66, \u8ba9Chrome\u63d2\u4ef6\u82f1\u96c4\u4eec\u9020\u798f\u4eba\u7c7b~ ChromePluginHeroes, Write a Chinese manual for the excellent Chrome plugin, let the Chrome plugin heroes benefit the human~", "language": "Python", "repo": "ChromeAppHeroes", "new_stars": 59, "stars": 8131, "owner": "zhaoolee", "forks": 642},
{"description": "A PyTorch implementation of EfficientNet", "language": "Python", "repo": "EfficientNet-PyTorch", "new_stars": 56, "stars": 240, "owner": "lukemelas", "forks": 10},
{"description": "Learn how to design large-scale systems. Prep for the system design interview. Includes Anki flashcards.", "language": "Python", "repo": "system-design-primer", "new_stars": 49, "stars": 63948, "owner": "donnemartin", "forks": 9760},
{"description": "dump", "language": "Python", "repo": "CVE-2019-0708", "new_stars": 45, "stars": 283, "owner": "n1xbyte", "forks": 105},
{"description": null, "language": "Python", "repo": "videoAscii", "new_stars": 42, "stars": 43, "owner": "eebmagic", "forks": 5},
{"description": "A curated list of awesome Python frameworks, libraries, software and resources", "language": "Python", "repo": "awesome-python", "new_stars": 37, "stars": 68103, "owner": "vinta", "forks": 13233},
{"description": "Never use print for debugging again", "language": "Python", "repo": "PySnooper", "new_stars": 38, "stars": 11086, "owner": "cool-RR", "forks": 663},
{"description": "Models and examples built with TensorFlow", "language": "Python", "repo": "models", "new_stars": 23, "stars": 53499, "owner": "tensorflow", "forks": 33199},
{"description": "A collective list of free APIs for use in software and web development.", "language": "Python", "repo": "public-apis", "new_stars": 35, "stars": 57618, "owner": "toddmotto", "forks": 6018},
{"description": "Pixel-Adaptive Convolutional Neural Networks (CVPR '19)", "language": "Python", "repo": "pacnet", "new_stars": 36, "stars": 54, "owner": "NVlabs", "forks": 5},
{"description": "Debug PyTorch code using PySnooper", "language": "Python", "repo": "TorchSnooper", "new_stars": 36, "stars": 63, "owner": "zasdfgbnm", "forks": 1},
{"description": "Advanced information gathering & OSINT tool for phone numbers.", "language": "Python", "repo": "PhoneInfoga", "new_stars": 32, "stars": 203, "owner": "sundowndev", "forks": 36},
{"description": null, "language": "Python", "repo": "ProjectInitializationAutomation", "new_stars": 29, "stars": 37, "owner": "KalleHallden", "forks": 19},
{"description": "AiLearning: \u673a\u5668\u5b66\u4e60 - MachineLearning - ML\u3001\u6df1\u5ea6\u5b66\u4e60 - DeepLearning - DL\u3001\u81ea\u7136\u8bed\u8a00\u5904\u7406 NLP", "language": "Python", "repo": "AiLearning", "new_stars": 27, "stars": 14596, "owner": "apachecn", "forks": 5153},
{"description": "The world's simplest facial recognition api for Python and the command line", "language": "Python", "repo": "face_recognition", "new_stars": 30, "stars": 24417, "owner": "ageitgey", "forks": 6466},
{"description": "Machine Learning Course with Python", "language": "Python", "repo": "machine-learning-course", "new_stars": 30, "stars": 4882, "owner": "machinelearningmindset", "forks": 673},
{"description": "Non official project based on original /r/Deepfakes thread. Many thanks to him!", "language": "Python", "repo": "faceswap", "new_stars": 28, "stars": 18944, "owner": "deepfakes", "forks": 6278}
]